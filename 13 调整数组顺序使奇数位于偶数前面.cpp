/*13、输入一个整数数组，实现一个函数来调整该数组中数字的顺序，
使得所有的奇数位于数组的前半部分，所有的偶数位于位于数组的后半部分，
并保证奇数和奇数，偶数和偶数之间的相对位置不变。*/
class Solution {
public:
	void reOrderArray(vector<int> &array) {
		queue<int> odd, even;
		int size = array.size();
		for (int i = 0; i < size; i++)
		{
			if (0 == array[i] % 2)
			{
				even.push(array[i]);
			}
			else
			{
				odd.push(array[i]);
			}
		}
		for (int i = 0; i < size; i++)
		{
			if (!odd.empty())
			{
				array[i] = odd.front();
				odd.pop();
			}
			else
			{
				array[i] = even.front();
				even.pop();
			}			
		}
	}
};